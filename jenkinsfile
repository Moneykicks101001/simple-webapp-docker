pipeline {
    agent any

    parameters {
        choice(name: 'DEPLOY_ENV', choices: 'production\nstaging\ndevelopment', description: 'Select the deployment environment')
    }

    stages {

        stage('Append Route') {
            steps {
                script {
                    if ( DEPLOY_ENV == 'development' ){
                        sh 'chmod +x append.sh'
                        sh './append.sh'
                        sh 'mv app.py pythonapp.py'
                    } 
                    else {
                        sh 'echo "not run append script because the env is not dev"'
                    }
                    stash(name: 'app_build', includes: 'pythonapp.py')     
                }
            }
        }

        // stage('Show app.py file') {
        //     steps {
        //         script {
        //             sh 'cat app.py'
        //         }
        //     }
        // }
        stage('Copy Code to Remote Server') {
            steps {
                script {
                    // Define the SSH credentials ID and remote server details
                    def sshCredentialsId = '552af145-0824-4fe3-8e8f-4d7f12f4863d'
                    def remoteServer = 'root@python'
                    def remotePath = '/home'
                    
                    unstash 'app_build'
                    sshagent(credentials: [sshCredentialsId]) {
                        sh "scp -r ./pythonapp.py $remoteServer:$remotePath"
                    }
                }
            }
        }
        stage('Run Python Script on Remote Server') {
            steps {
                script {
                    // Define the SSH credentials ID
                    def sshCredentialsId = '552af145-0824-4fe3-8e8f-4d7f12f4863d'
                    
                    // Define the remote server details for each environment
                    def remoteServers = [
                        production: 'root@python',
                        staging: 'root@python',
                        development: 'root@python'
                    ]
                    
                    def deployEnv = params.DEPLOY_ENV
                    def remoteServer = remoteServers[deployEnv]
                    def remotePath = '/home'
                    
                    // Use SSH agent to run the Python script on the selected remote server
                    sshagent(credentials: [sshCredentialsId]) {
                        sh "ssh -f $remoteServer 'cd $remotePath && nohup python app.py > /dev/null 2>&1 &'"
                    }
                }
            }
        }

    }

}
